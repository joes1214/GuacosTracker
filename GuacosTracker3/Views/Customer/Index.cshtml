@using static GuacosTracker3.Utilities.Pagination
@model PaginatedList<GuacosTracker3.Models.Customer>

<div class="row my-3">
    <div class="col">
        <a asp-action="Create">Create New</a>
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        First
                    </th>
                    <th>
                        Last
                    </th>
                    <th>
                        Phone #
                    </th>
                    <th>
                        Alt. Phone #
                    </th>
                    <th>
                        Email
                    </th>
                    <th colspan="2">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AltPhone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td colspan="2">
                            <a asp-action="CreateTicket" asp-route-id="@item.Id" type="submit" value="Create">Create</a>
                            |
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            |
                            <a asp-action="Delete" asp-route-id="@item.Id" class="text-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row my-3">
    <div class="col d-flex justify-content-around">
        @{
            string hasPreviousPage = !Model.HasPreviousPage ? "disabled" : "";
            string hasNextPage = !Model.HasNextPage ? "disabled" : "";
        }

        <div>
            <a asp-action="Index"
               asp-route-pageNum="1"
               class="btn btn-default @hasPreviousPage">
                &lt; &lt;
            </a>

            <a asp-action="Index"
               asp-route-pageNum="@(Model.PageIndex - 1)"
               class="btn btn-default @hasPreviousPage">
                Previous
            </a>
        </div>

        <div class="my-auto">
            <span class="my-auto">Page</span>

            <span>@Model.PageIndex</span>

            <span>of</span>

            <span>@Model.TotalPages</span>
        </div>
            
        <div>
            <a asp-action="Index"
               asp-route-pageNum="@(Model.PageIndex + 1)"
               class="btn btn-default @hasNextPage">
                Next
            </a>

            <a asp-action="Index"
               asp-route-pageNum="@(Model.TotalPages)"
               class="btn btn-default @hasNextPage">
                &gt; &gt;
            </a>
        </div>
    </div>
</div>