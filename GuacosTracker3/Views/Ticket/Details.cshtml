@using GuacosTracker3.SharedData
@model TicketNoteCustomerViewModel

<div class="row my-3">
    <div class="col">
        <h2>
            @Html.DisplayFor(model => model.Ticket.Title)
        </h2>
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <dl class="row">
            <dt class="col-sm-4">
                Ticket ID
            </dt>
            <dd class="col-sm-8">
                @Model.Ticket.Id
            </dd>            
            
            <dt class="col-sm-4">
                Customer
            </dt>
            <dd class="col-sm-8">
                @Model.Customer.LName, @Model.Customer.FName
            </dd>            
            
            <dt class="col-sm-4">
                Date
            </dt>
            <dd class="col-sm-8">
                @Model.Ticket.DateCreated
            </dd>            
            
            <dt class="col-sm-4">
                Created by
            </dt>
            <dd class="col-sm-8">
                @User.FindFirst(c => c.Type == "name")?.Value
            </dd>
        </dl>
    </div>
</div>

<div class="row my-3 pb-3">
    <div class="col">
        <a asp-action="Edit" asp-route-id="@Model?.Ticket.Id">Edit</a>
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <h3>Notes</h3>
        <hr />
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <h4>Add Note</h4>
    </div>
</div>

<div class="row my-3">
    <div class="col">
        <form asp-action="Details" method="POST" class="d-flex flex-column gap-3">
            <div>
                <input type="hidden" asp-for="Ticket" value="@Model.Ticket.Id" />
                <input type="hidden" asp-for="Ticket" value="@Model.Ticket" />
                <input type="hidden" asp-for="Customer" value="@Model.Customer" />
                <input type="hidden" asp-for="Note.EmployeeID" class="form-control" value="@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value" />
            </div>

            <div>
                <span asp-validation-for="Note.Status" class="text-danger"></span>
                <label asp-for="Note.Status" class="control-label"></label> <span class="text-danger">*</span>
                <select asp-for="Note.Status" class="form-control" asp-items="ProgressList.GetStatusList()">
                </select>
            </div>

            <div class="form-group">
                <span asp-validation-for="Note.Description" class="text-danger"></span>
                <label asp-for="Note.Description" class="control-label"></label> <span class="text-danger">*</span>
                <textarea asp-for="Note.Description" class="form-control" rows="4"></textarea>
                <span><span id="textarea-characters" class="text-danger">0</span>/4000</span>
            </div>

            <div class="form-group mt-2 mb-4">
                <input type="submit" value="Create Note" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="row my-3">
    <div class="col-6">
        <h4 class="mb-3">Previous Notes</h4>

        <div class="d-flex gap-3 flex-wrap overflow-auto" style="max-height: 700px">
            @if (Model.Notes.Count > 0) {
                @foreach (Note item in Model.Notes)
                {
                    <div class="card w-100">
                        <div class="card-header bg-@ProgressList.GetColor(item.Status) text-nowrap">
                            <h5>@item.Status</h5>

                        </div>
                        <div class="card-body">
                            <p class="">@item.Date.ToString("MM/dd/yy")</p>
                            <p class="card-text">@item.Description</p>
                        </div>
                        <div class="card-footer text-nowrap d-flex justify-content-between">
                            <small class="text-dark">Created by: @User.FindFirst(c => c.Type == "name")?.Value</small>
                            <small class="">@item.Id</small>
                        </div>
                    </div>
                }
            } else {
                <span>No notes!</span>
            }
        </div>
    </div>

    @if(Model.RecentNote != null) {
        <div class="col-6">
            <h4 class="mb-3">Most recent note</h4>

            <div class="card w-100">
                <div class="card-header bg-@ProgressList.GetColor(Model.RecentNote.Status) text-nowrap">
                    <h5>@Model.RecentNote.Status</h5>

                </div>
                <div class="card-body">
                    <p class="">@Model.RecentNote.Date.ToString("MM/dd/yy")</p>
                    <p class="card-text">@Model.RecentNote.Description</p>
                </div>
                <div class="card-footer text-nowrap d-flex justify-content-between">
                    <small class="text-dark">Created by: @User.FindFirst(c => c.Type == "name")?.Value</small>
                    <small class="">@Model.RecentNote.Id</small>
                </div>
            </div>
        </div>
    }
</div>


<div class="row">
    <div class="col">
        <a asp-action="Index">Back to List</a>
    </div>
</div>

<script>
    const descriptionTextArea = document.getElementById('Note_Description');
    const descriptionCharacters = document.getElementById('textarea-characters');

    descriptionTextArea.addEventListener('keyup', function(){
        const characters = descriptionTextArea.value.length;

        if (characters < 10 || characters >= 4000) {
            descriptionCharacters.classList.add('text-danger');
        } else {
            descriptionCharacters.classList.remove('text-danger')
        }
        descriptionCharacters.innerText = characters;
    });
</script>