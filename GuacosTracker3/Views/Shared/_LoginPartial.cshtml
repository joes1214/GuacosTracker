@using Microsoft.AspNetCore.Identity
@using GuacosTracker3.Areas.Identity.Data

@inject SignInManager<TrackerUser> SignInManager
@inject UserManager<TrackerUser> UserManager

<ul class="navbar-nav">
    @*@if (SignInManager.IsSignedIn(User))
    {
    <li class="nav-item">
    <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>
    </li>
    }
    else
    {
    <li class="nav-item">
    <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
    <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    }*@
    @if (User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value != null)
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Profile">Account</a>
        </li>

        <li class="nav-item">
            <button class="btn btn-danger" asp-controller="Account" asp-action="Logout">Logout</button>
        </li>


        @*        <p>@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value</p>
    <p>@User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value</p>*@

    }
    else
    {
        <a asp-controller="Account" asp-action="Login">Login</a>
    }
</ul>
